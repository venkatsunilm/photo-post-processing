[project]
name = "photo-post-processing"
version = "0.1.0"
description = "Professional photo processing pipeline with RAW support"
authors = [
    {name = "Venkat Sunil M", email = "venkatsunilm@example.com"},
    {name = "Haritha Minchala", email = "haritha@example.com"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pillow==11.3.0",
    "opencv-python==4.12.0.88",
    "rawpy==0.25.0",
    "numpy==2.2.6", # Pin numpy to 2.2.6 to match the requirements of opencv-python==4.12.0.88.
    "tqdm==4.67.1",
    "colorama==0.4.6",
    "psutil==6.1.0", # Pin psutil to 6.1.0 to resolve the conflict with safety==3.5.2.
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
    "ruff==0.12.2",
    "mypy==1.16.1",
    "pre-commit==4.2.0",
    "bandit==1.8.6",
    "safety==3.5.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
include = [
    "src/**/*.py",
    "README.md",
    "requirements.txt"
]


[tool.ruff]
line-length = 88
target-version = "py310"
src = ["src", "tests"]
extend-exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".pytest_cache",
    ".venv",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Handle specific library type issues
[[tool.mypy.overrides]]
module = ["rawpy", "rawpy.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["PIL.*"]
ignore_errors = true

# Disable specific warnings for compatibility between environments
[[tool.mypy.overrides]]
module = ["src.utils.image_processing"]
disable_error_code = ["attr-defined", "arg-type", "unused-ignore"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
